#!/bin/bash
#insomnia-lite
#An application that will remind you when to go to bed based on your
#wake up time and the optimal sleep times algorithm.
#Version 1.0.0
wakeUpTime="08:30"

function showRestNotification()
{
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
      notify-send "Insomnia" "Time to take a rest"  -u critical -t 7000 -i sleep.ico

  elif [[ "$OSTYPE" == "darwin"* ]]; then
      terminal-notifier -title "Insomnia" -message "It's time to take a rest"  -sound "default"  -group rest -timeout 7 -appIcon sleep.png
  fi
}

function help()
{
  echo "NAME: insomnia-lite"
  echo "Usage: "
  echo "    [-t] (tests notification)"
  echo "    [-s wakeUpTime] wakeuptime 24 hour time with semicolon in between zeros necessary ex. 08:30 (sets new wakeuptime)"
  echo "    [-h] (brings up the help page)"
}

function generateSleepTimes()
{
  IFS=: splitTime=(${wakeUpTime##*-})
  wakeUpHours=${splitTime[0]}
  wakeUpMinutes=${splitTime[1]}

  if [[ "$OSTYPE" == "linux-gnu" ]]; then
         currentHours=$(date +'%H')
         currentMinutes=$(date +'%M')
  elif [[ "$OSTYPE" == "darwin"* ]]; then
          currentHours=$(gdate +'%H')
          currentMinutes=$(gdate +'%M')
  fi

  if [[ $wakeUpHours > $currentHours ]]; then
        wakeUpTime="$wakeUpHours:$wakeUpMinutes tomorrow"
  elif [[ "$wakeUpHours" == "$currentHours" && $wakeUpMinutes < $currentMinutes ]]; then
        wakeUpTime="$wakeUpHours:$wakeUpMinutes tomorrow"
  else
        wakeUpTime="$wakeUpHours:$wakeUpMinutes today"
  fi

echo $wakeUpTime



if [[ "$OSTYPE" == "linux-gnu" ]]; then
        newtime=$(date -d $wakeUpTime-15minutes +'%H:%M')

elif [[ "$OSTYPE" == "darwin"* ]]; then
        newtime=$(gdate -d $wakeUpTime-15minutes +'%H:%M')
fi

echo $newtime
}





if [[ $# == 0 ]]; then
  help
  exit 0
fi



while getopts ":hts::" opt; do
  case $opt in
    s)
      echo "-s was triggered, Parameter: $OPTARG" >&2
      wakeUpTime=$OPTARG
      generateSleepTimes
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    t)
      showRestNotification
    ;;
    h)
      help
    ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done
